name: Build on Pull Request

on:
  pull_request:
    branches: [ main, master ]
    types: [opened, synchronize, reopened, ready_for_review]

# Permisos necesarios para el workflow
permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    name: Build and Type Check
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]
        include:
          - node-version: 18.x
            cache-key: node-18
          - node-version: 20.x
            cache-key: node-20

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ matrix.cache-key }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.cache-key }}-
          ${{ runner.os }}-node-
          ${{ runner.os }}-

    - name: Install dependencies
      run: |
        npm ci
        npm cache clean --force

    - name: Run type check
      run: npm run type-check

    - name: Run lint
      run: npm run lint

    - name: Build application
      run: npm run build

    - name: Verify build output
      run: |
        if [ ! -d ".next" ]; then
          echo "❌ Build failed: .next directory not found"
          exit 1
        fi
        
        if [ ! -f ".next/BUILD_ID" ]; then
          echo "❌ Build failed: BUILD_ID file not found"
          exit 1
        fi
        
        echo "✅ Build completed successfully"
        echo "Build ID: $(cat .next/BUILD_ID)"

    - name: Upload build artifacts (on failure)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-${{ matrix.node-version }}
        path: |
          .next/**/*.log
          npm-debug.log*
          yarn-debug.log*
          yarn-error.log*

    - name: Upload build report
      uses: actions/upload-artifact@v4
      with:
        name: build-report-${{ matrix.node-version }}
        path: |
          .next/analyze/
          .next/server/ssr-module-requirements.json
        if-no-files-found: ignore

  size-limit:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Install size-limit
      run: npm install -g @size-limit/core

    - name: Check bundle size
      run: |
        # Check main bundle size
        MAIN_BUNDLE_SIZE=$(du -sb .next/static/chunks | grep -E "main.*\.js$" | awk '{print $1}')
        echo "Main bundle size: $MAIN_BUNDLE_SIZE bytes"
        
        # Warning if bundle is too large (over 500KB)
        if [ "$MAIN_BUNDLE_SIZE" -gt 512000 ]; then
          echo "⚠️  Warning: Main bundle exceeds 500KB consider optimizing"
          echo "Bundle size: $(($MAIN_BUNDLE_SIZE/1024))KB"
        else
          echo "✅ Bundle size is within acceptable limits"
        fi

  # Job para reportar el status del build
  report-status:
    name: Report Build Status
    runs-on: ubuntu-latest
    needs: [build, size-limit]
    if: always()
    
    steps:
    - name: Check build status
      run: |
        if [ "${{ needs.build.result }}" == "success" ] && [ "${{ needs.size-limit.result }}" == "success" ]; then
          echo "✅ All checks passed"
          exit 0
        else
          echo "❌ Some checks failed"
          exit 1
        fi